<?php

/**
 * PHP Apache VHost Generator
 * (c) Clark Winkelmann 2015
 */

/**
 * Reads a json file as an associative array
 * @param string $file
 * @return array
 */
function load_json_file($file) {
	return json_decode(file_get_contents($file), true);
}

/**
 * Returns item at given index or $default if it doesn't exist
 * @param array $array
 * @param mixed $key
 * @param mixed $default
 * @return mixed
 */
function array_get(array $array, $key, $default = null) {
	if(array_key_exists($key, $array)) {
		return $array[$key];
	}

	return $default;
}

function tabs($count = 1) {
	$tab = '  ';
	return str_repeat($tab, $count);
}

$config = load_json_file('config.json');

$apps = load_json_file('apps.json');

echo "# Generated By PHPVHostGenerator on " . date('r') . "\n";

foreach($apps as $app) {
	echo "<VirtualHost *:80>\n";
		echo tabs() . "ServerName " . array_get($app, 'slug', 'UNKNOWN') . array_get($config, 'appdomain', 'UNKNOWN') . "\n";

		$domains = array_get($app, 'domains', []);

		foreach($domains as $domain) {
			echo tabs() . "ServerAlias " . $domain . "\n";
		}

		if(array_get($app, 'https_only', false)) {
			echo tabs() . "RewriteEngine On\n";
			echo tabs() . "RewriteCond %{HTTP:X-Forwarded-Proto} !https\n";
			echo tabs() . "RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [L]\n";
		}

		if(array_key_exists('proxy_to', $app)) {
			// TODO: allow to set https in the property if wanted
			$proxy_to = 'http://' . array_get($app, 'proxy_to') . '/';
			// Sets the X_FORWARDED_PROTO header. CloudFlare sets it automatically
			// but direct https connexions don't have it
			echo tabs() . "RequestHeader set X_FORWARDED_PROTO 'https'\n";
			echo tabs() . "ProxyPreserveHost On\n";
			echo tabs() . "ProxyPass / " . $proxy_to . "\n";
			echo tabs() . "ProxyPassReverse / " . $proxy_to . "\n";
		} else {
			$docroot = array_get($config, 'docroot', '/') . array_get($app, 'docroot', '');

			echo tabs() . "DocumentRoot \"" . $docroot . "\"\n";

			echo tabs() . "<Directory \"" . $docroot . "\">\n";
				echo tabs(2) . "Options " . array_get($config, 'directory_options', '') . "\n";
				echo tabs(2) . "AllowOverride All\n"; // Autorise .htaccess
				if(array_get($app, 'cloudflare_only', false)) {
					echo tabs(2) . "Order Deny,Allow\n";
					echo tabs(2) . "Deny from all\n";
					foreach(array_get($config, 'cloudflare_ips', []) as $ip) {
						echo tabs(2) . "Allow from " . $ip . "\n";
					}
				} else {
					echo tabs(2) . "Order Allow,Deny\n";
					echo tabs(2) . "Allow from all\n";
				}

				foreach(array_get($app, 'directory_directives', []) as $directive) {
					echo tabs(2) . $directive . "\n";
				}
			echo tabs() . "</Directory>\n";
		}
	echo "</VirtualHost>\n";
}

echo "ErrorLog \${APACHE_LOG_DIR}/error.log\n";